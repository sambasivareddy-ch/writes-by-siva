const blogs = [
    {
        'id': 'cp-25',
        'slug': 'cp-25',
        'title': 'Remove Nth node from the back of the LL',
        'description': 'Competitive Programming Problem: Given the Linkedlist and n-th value, remove the n-th element from the end of LL',
        'date': '2025-07-17',
        'domains': ['competitive-programming', 'linked-list', 'two-pointers'],
        'filename': 'competetive-programming/cp-25.md',
    },
    {
        'id': 'react-03',
        'slug': 'react-vdom',
        'title': "React's Virtual DOM",
        'description': 'A blog to explain about virtual DOM in React',
        'date': '2025-07-17',
        'domains': ['react'],
        'filename': 'react/react-vdom.md',
    },
     {
        'id': 'cp-24',
        'slug': 'cp-24',
        'title': 'Valid Anagram',
        'description': 'Competitive Programming Problem: Given two strings s and t, return true if t is an anagram of s, and false otherwise.',
        'date': '2025-07-14',
        'domains': ['competitive-programming', 'strings'],
        'filename': 'competetive-programming/cp-24.md',
    },
    {
        'id': 'cp-23',
        'slug': 'cp-23',
        'title': 'Find the longest common prefix',
        'description': 'Competitive Programming Problem: Given the list of strings, find the longest common prefix among them',
        'date': '2025-07-13',
        'domains': ['competitive-programming', 'strings'],
        'filename': 'competetive-programming/cp-23.md',
    },
    {
        'id': 'system-design-06',
        'slug': 'url-shortener',
        'title': 'System Design - URL Shortener',
        'description': 'Sixth post in the system design series, how to design feasible and efficient URL design.',
        'date': '2025-07-12',
        'domains': ['system-design'],
        'filename': 'system-design/url-shortener.md',
    },
    {
        'id': 'cp-22',
        'slug': 'cp-22',
        'title': 'Starting point of a cycle in the given LinkedList',
        'description': 'Competitive Programming Problem: Given the Linkedlist, find the starting point of the cycle in the ll if exists else Null',
        'date': '2025-07-12',
        'domains': ['competitive-programming', 'linked-list'],
        'filename': 'competetive-programming/cp-22.md',
    },
    {
        'id': 'cp-21',
        'slug': 'cp-21',
        'title': 'Find the intersection of 2 linked lists',
        'description': 'Competitive Programming Problem: Given the Linkedlist, find whether the ll has cycle or not',
        'date': '2025-07-09',
        'domains': ['competitive-programming', 'linked-list'],
        'filename': 'competetive-programming/cp-21.md',
    },
     {
        'id': 'react-02',
        'slug': 'react-use-state',
        'title': 'React Hook: useState',
        'description': 'A blog to explain about useState hook in React',
        'date': '2025-07-10',
        'domains': ['react'],
        'filename': 'react/use-state.md',
    },
    {
        'id': 'cp-20',
        'slug': 'cp-20',
        'title': 'Reverse the given LinkedList',
        'description': 'Competitive Programming Problem: Given the Linkedlist, reverse that linkedlist',
        'date': '2025-07-10',
        'domains': ['competitive-programming', 'linked-list', 'two-pointers'],
        'filename': 'competetive-programming/cp-20.md',
    },
     {
        'id': 'system-design-05',
        'slug': 'cap-theorem',
        'title': 'System Design - CAP Theorem',
        'description': 'Fifth post in the system design series, focusing on CAP Theorem.',
        'date': '2025-07-09',
        'domains': ['system-design'],
        'filename': 'system-design/cap.md',
    },
    {
        'id': 'cp-19',
        'slug': 'cp-19',
        'title': 'Detect Cycle in Linkedlists',
        'description': 'Competitive Programming Problem: Given the Linkedlist, find whether the ll has cycle or not',
        'date': '2025-07-09',
        'domains': ['competitive-programming', 'linked-list'],
        'filename': 'competetive-programming/cp-19.md',
    },
    {
        'id': 'cp-18',
        'slug': 'cp-18',
        'title': 'Lowest Common Ancestor in BST',
        'description': 'Competitive Programming Problem: Given the BST, p & q.. Find the LCA of the given values p & q',
        'date': '2025-07-09',
        'domains': ['competitive-programming', 'bst'],
        'filename': 'competetive-programming/cp-18.md',
    },
    {
        'id': 'cp-17',
        'slug': 'cp-17',
        'title': 'Inorder Predecessor and Successor in BST',
        'description': 'Competitive Programming Problem: Given the BST and key, find the inorder predecessor and successor of the key',
        'date': '2025-07-08',
        'domains': ['competitive-programming', 'bst'],
        'filename': 'competetive-programming/cp-17.md',
    },
    {
        'id': 'cp-16',
        'slug': 'cp-16',
        'title': 'Check whether BT is BST or not',
        'description': 'Competitive Programming Problem: Given the Binary Tree, check whether it is Valid BST or not',
        'date': '2025-07-07',
        'domains': ['competitive-programming', 'bst'],
        'filename': 'competetive-programming/cp-16.md',
    },
    {
        'id': 'cp-15',
        'slug': 'cp-15',
        'title': 'Search a key in BST',
        'description': 'Competitive Programming Problem: Given the BST and a key, search the key in BST',
        'date': '2025-07-07',
        'domains': ['competitive-programming', 'bst'],
        'filename': 'competetive-programming/cp-15.md',
    },
    {
        'id': 'react-01',
        'slug': 'react-context',
        'title': 'React Context: createContext & useContext',
        'description': 'A blog to explain about Context, createContext & useContext Hook in React',
        'date': '2025-07-05',
        'domains': ['react'],
        'filename': 'react/react-context.md',
    },
    {
        'id': 'cp-14',
        'slug': 'cp-14',
        'title': 'Construct Binary Tree from Inorder & Postorder',
        'description': 'Competitive Programming Problem: Construct the binary tree from the arrays of Inorder & Postorder traversals',
        'date': '2025-07-05',
        'domains': ['competitive-programming', 'tree'],
        'filename': 'competetive-programming/cp-14.md',
    },
    {
        'id': 'system-design-04',
        'slug': 'cdns',
        'title': 'System Design - CDNs',
        'description': 'Fourth post in the system design series, discussed about CDNs.',
        'date': '2025-07-04',
        'domains': ['system-design'],
        'filename': 'system-design/cdn.md',
    },
     {
        'id': 'cp-13',
        'slug': 'cp-13',
        'title': 'Construct Binary Tree from Inorder & Preorder',
        'description': 'Competitive Programming Problem: Construct the binary tree from the arrays of inorder & preorder traversals',
        'date': '2025-07-04',
        'domains': ['competitive-programming', 'tree'],
        'filename': 'competetive-programming/cp-13.md',
    },
     {
        'id': 'cp-12',
        'slug': 'cp-12',
        'title': 'Check for Symmetry of a Binary Tree',
        'description': 'Competitive Programming Problem: Check whether the given binary-tree is a symmetry or not',
        'date': '2025-07-04',
        'domains': ['competitive-programming', 'tree'],
        'filename': 'competetive-programming/cp-12.md',
    },
    {
        'id': 'clock-sweep',
        'slug': 'clock-sweep',
        'title': 'Clock Sweep Algorithm in PostgreSQL',
        'description': 'This blog will introduce about the Clock-Sweep Algorithm used in PG for Page replacement in buffers',
        'date': '2025-07-03',
        'domains': ['postgresql'],
        'filename': 'postgres/clock-sweep.md'
    },
    {
        'id': 'cp-11',
        'slug': 'cp-11',
        'title': 'Maximum Depth of a Binary Tree',
        'description': 'Competitive Programming Problem: Find the maximum depth of a Binary Tree from root to leaf node',
        'date': '2025-07-03',
        'domains': ['competitive-programming', 'tree'],
        'filename': 'competetive-programming/cp-11.md',
    },
    {
        'id': 'cp-10',
        'slug': 'cp-10',
        'title': 'Level Order Traversal',
        'description': 'Competitive Programming Problem: Given the tree, give the level wise nodes as a list',
        'date': '2025-07-03',
        'domains': ['competitive-programming', 'tree'],
        'filename': 'competetive-programming/cp-10.md',
    },
    {
        'id': 'cp-09',
        'slug': 'cp-09',
        'title': 'Identical Trees',
        'description': 'Competitive Programming Problem: Identify whether two trees are identical or not',
        'date': '2025-07-03',
        'domains': ['competitive-programming', 'tree'],
        'filename': 'competetive-programming/cp-09.md',
    },
    {
        'id': 'cp-08',
        'slug': 'cp-08',
        'title': 'Path from Root to Node in Binary Tree',
        'description': 'Competitive Programming Problem: Find the Path of a node from the root in a binary tree',
        'date': '2025-07-02',
        'domains': ['competitive-programming', 'tree'],
        'filename': 'competetive-programming/cp-08.md',
    },
    {
        'id': 'cp-07',
        'slug': 'cp-07',
        'title': 'Left & Right View of a Binary Tree',
        'description': 'Competitive Programming Problem: Find the left & right view of a binary tree',
        'date': '2025-07-02',
        'domains': ['competitive-programming', 'tree'],
        'filename': 'competetive-programming/cp-07.md',
    },
    {
        'id': 'system-design-03',
        'slug': 'scalability',
        'title': 'System Design - Scalability',
        'description': 'Third post in the system design series, focusing on scalability techniques.',
        'date': '2025-07-01',
        'domains': ['system-design'],
        'filename': 'system-design/scalability.md',
    },
    {
        'id': 'cp-06',
        'slug': 'cp-06',
        'title': 'Tree Traversal - Inorder, Preorder, Postorder',
        'description': 'Competitive Programming Problem: Implement Tree Traversal methods - Inorder, Preorder, Postorder',
        'date': '2025-07-01',
        'domains': ['competitive-programming', 'tree'],
        'filename': 'competetive-programming/cp-06.md',
    },
    {
        'id': 'cp-05',
        'slug': 'cp-05',
        'title': 'Min Stack',
        'description': 'Competitive Programming Problem: Implement Min Stack',
        'date': '2025-06-23',
        'domains': ['competitive-programming', 'stack'],
        'filename': 'competetive-programming/cp-05.md',
    },
    {
        'id': 'cp-04',
        'slug': 'cp-04',
        'title': 'Check for Balanced Parenthesis',
        'description': 'Competitive Programming Problem: Check for Balanced Parenthesis',
        'date': '2025-06-21',
        'domains': ['competitive-programming', 'stack'],
        'filename': 'competetive-programming/cp-04.md',
    },
    {
        'id': 'cp-03',
        'slug': 'cp-03',
        'title': 'Stack - Linear Data Structure',
        'description': 'Competitive Programming Problem: Stack linear data structure implementation',
        'date': '2025-06-21',
        'domains': ['competitive-programming', 'stack'],
        'filename': 'competetive-programming/cp-03.md',
    },
    {
        'id': 'cp-02',
        'slug': 'cp-02',
        'title': 'Next Greater Element',
        'description': 'Competitive Programming Problem: Find the next greater element for each element in an array.',
        'date': '2025-06-20',
        'domains': ['competitive-programming', 'stack'],
        'filename': 'competetive-programming/cp-02.md',
    },
    {
        'id': 'system-design-02',
        'slug': 'load-balancing',
        'title': 'System Design - Load Balancing',
        'description': 'Second post in the system design series, focusing on load balancing techniques.',
        'date': '2025-06-19',
        'domains': ['system-design'],
        'filename': 'system-design/load-balancing.md',
    },
    {
        'id': 'system-design-01',
        'slug': 'intro-to-system-design',
        'title': 'System Design - Introduction to System Design',
        'description': 'First post in the system design series, covering the basics of system design.',
        'date': '2025-06-19',
        'domains': ['system-design'],
        'filename': 'system-design/intro-to-system-design.md',
    },
    {
        'id': 'cp-01',
        'slug': 'cp-01',
        'title': 'Maximum Subarray Sum',
        'description': 'Competitive Programming Problem: Find the maximum sum of a contiguous subarray.',
        'date': '2025-06-19',
        'domains': ['competitive-programming', 'dynamic-programming'],
        'filename': 'competetive-programming/cp-01.md',
    },
]

export default blogs;